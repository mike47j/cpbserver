/*
    CPBserver: score entry by arrows
    Copyright (C) 2014  Mike Johnson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
// rounds file

	var scoring = 0;

	function page() {
	    var rnd, i;
	    for (rnd = 0; rnd < rounds.length; rnd++) {
		if (data[ROUND] == rounds[rnd][RNDNAME])
		    break;
	    }
		var tb1str = "H", tb2str = "G";
	    var imperialdistance = rounds[rnd][RNDMETERS];
	    scoring = rounds[rnd][RNDSCORING];
	    arrowsperend = rounds[rnd][RNDEND];
		if (worldarchery==1) {
			tb1str = "X/10";
			tb2str = "X";
		}
		else if (scoring==Worcester) {
			tb2str = "5";
		}
		else if (scoring!=Imperial)
			tb2str = "X/10";

	    var txt = "<h2>" + data[TARGET] + " - " + data[NAME] + " (" + data[GENDER] + "), "
			+ data[CLUB] + ", " + data[ROUND] + ", " + data[BOW] + "</h2>";
	    var arrows = data[ARROWS];
	    txt += "<table border=\"1\" style=\"border-collapse: collapse;\" ><tr><th colspan=\"" + arrowsperend + "\">Arrows</th>"
			+ "<th width=\"30\">ET</th><th colspan=\"" + arrowsperend + "\">Arrows</th>"
		+ "<th width=\"30\">ET</th></th><th width=\"40\">S</th><th width=\"30\">" + tb1str
		+ "<th width=\"30\">" + tb2str + "</th><th width=\"50\">RT</th></tr>";
	    var tb1t = 0;
	    var tb2t = 0;
	    var rt = 0;
	    var et1, et2;
	    var tb1st = 0;
	    var tb2st = 0;
	    var rst = 0;

	    var subrnd, arrowno = 0;
	    for (subrnd = 0; subrnd < 4; subrnd++) {
		var rndarrowno = 0;
		while (rndarrowno < rounds[rnd][subrnd * 3 + RNDARROWS1]) {
		    txt += "<tr>";
		    et1 = 0;
		    var tb1 = 0;
		    var tb2 = 0;
		    for (i = 0; i < arrowsperend; i++) {
				if (arrowno == arrows.length)
					txt += "<td align=\"center\" style=\"background-color:yellow;\">&nbsp;</td>";
				else if (arrowno > arrows.length)
					txt += "<td align=\"center\" width=\"25\">&nbsp;</td>";
				else if (arrows.charCodeAt(arrowno) - 65 == 0)
					txt += "<td align=\"center\" width=\"25\">M</td>";
				else if (arrows.charCodeAt(arrowno) - 65 == 11) {
					txt += "<td align=\"center\" width=\"25\">X</td>";
					et1 += 10;
					tb1++;
					tb2++;
				}
				else {
					txt += "<td align=\"center\" width=\"25\">" + (arrows.charCodeAt(arrowno) - 65) + "</td>";
					et1 += arrows.charCodeAt(arrowno) - 65;
					if (worldarchery==0)
						tb1++;
					if (arrows.charCodeAt(arrowno) - 65 == 10) {
						if (worldarchery==1)
							tb1++;
						else
							tb2++;
					}
					if (scoring==Worcester && arrows.charCodeAt(arrowno) - 65 == 5)
						tb2++;
					if (scoring == Imperial && arrows.charCodeAt(arrowno) - 65 == 9)
						tb2++;
				}
				arrowno++;
				rndarrowno++;
		    }
		    txt += "</td><td align=\"center\">" + et1 + "</td>";
		    et2 = 0;
		    if (rndarrowno < rounds[rnd][subrnd * 3 + RNDARROWS1]) {
				for (i = 0; i < arrowsperend; i++) {
					if (arrowno == arrows.length)
						txt += "<td align=\"center\" style=\"background-color:yellow;\">&nbsp;</td>";
					else if (arrowno >= arrows.length)
						txt += "<td align=\"center\" width=\"25\">&nbsp;</td>";
					else if (arrows.charCodeAt(arrowno) - 65 == 0)
						txt += "<td align=\"center\" width=\"25\">M</td>";
					else if (arrows.charCodeAt(arrowno) - 65 == 11) {
						txt += "<td align=\"center\" width=\"25\">X</td>";
						et2 += 10;
						tb1++;
						tb2++;
					}
					else {
						txt += "<td align=\"center\" width=\"25\">" + (arrows.charCodeAt(arrowno) - 65) + "</td>";
						et2 += arrows.charCodeAt(arrowno) - 65;
						if (worldarchery==0)
							tb1++;
						if (arrows.charCodeAt(arrowno) - 65 == 10) {
							if (worldarchery==1)
								tb1++;
							else
								tb2++;
						}
						if (scoring==Worcester && arrows.charCodeAt(arrowno) - 65 == 5)
							tb2++;
						if (scoring == Imperial && arrows.charCodeAt(arrowno) - 65 == 9)
							tb2++;
					}
					arrowno++;
					rndarrowno++;
				}
				txt += "</td><td align=\"center\">" + et2 + "</td>"
		    }
		    else
				txt += "<td colspan=\""+(arrowsperend+1)+"\" style=\"background-color:silver;\">";
		    tb1t += tb1;
		    tb1st += tb1;
		    tb2t += tb2;
		    tb2st += tb2;
		    rst += et1 + et2;
		    rt += (et1 + et2);
		    txt += "<td align=\"center\">" + (et1 + et2) + "</td><td align=\"center\">" + tb1;
		    txt += "</td><td align=\"center\">" + tb2 + "</td><td align=\"center\">" + rt + "</td></tr>";

		    if (rndarrowno >= rounds[rnd][subrnd * 3 + RNDARROWS1]) {
				// sub totals
				var distance = rounds[rnd][subrnd * 3 + RNDDISTANCE1];
				var targetsize = rounds[rnd][subrnd * 3 + RNDTARGET1];
				if (imperialdistance == 0)
					distance += " yards. ";
				else
					distance += " meters. ";
				distance += targetsize + " cm face. ";
				txt += "<tr><td colspan=\"" + (arrowsperend*2+2) + "\" align=\"right\">" + distance 
					+ " Sub Totals</td><td align=\"center\">" + rst + "<td align=\"center\">" + tb1st 
					+ "</td>"+ "</td><td align=\"center\">" + tb2st + "</td><td align=\"center\">" + rt + "</td>";
				tb1st = 0;
				rst = 0;
				tb2st = 0;
		    }

		}
	    }
	    // Grand totals
	    txt += "<tr><td colspan=\"" + (arrowsperend*2+2) 
			+ "\"><textarea id=\"msg\" cols=\"40\" rows=\"1\" readonly=\"readonly\" tabindex=\"-1\" >"
			+ "</textarea>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Grand Totals</td>";
	    txt += "<td align=\"center\">" + rt + "<td align=\"center\">" + tb1t + "</td>" 
			+ "</td><td align=\"center\">" + tb2t + "</td><td align=\"center\">" + rt + "</td></table>";

	    txt += "<form name =\"data\" id=\"data\" action=\"/scoreentry.htm\" method=\"get\"><table>";
	    txt += "<input name=\"target\" value=\"" + data[TARGET] + "\" type=\"hidden\" />";
	    txt += "<input name=\"send\" id=\"send\" value=\"data\" type=\"hidden\" />";
	    txt += "<input name=\"arrowsend\" id=\"arrowsend\" value=\"\" type=\"hidden\" />";
	    txt += "<input name=\"thits\" id=\"thits\" type=\"hidden\" size=\"3\" value=\"" + tb1t + "\" />";
	    txt += "<input name=\"tgolds\" id=\"tgolds\" type=\"hidden\" size=\"3\" value=\"" + tb2t + "\"  />";
	    txt += "<input name=\"tscore\" id=\"tscore\" type=\"hidden\" size=\"3\" value=\"" + rt + "\"  /></tr>";
	    txt += "<input name=\"state\" id=\"state\" type=\"hidden\" size=\"3\" value=\"Inuse\"  /></tr>";
	    txt += "<td width=\"100\"><input type=\"button\" value=\"Enter\" onclick=\"checksend()\" tabindex=\"1\" /></td>";
	    txt += "<td width=\"100\"><input type=\"button\" name=\"Back\" value=\"Back\" onclick=\"sendback()\" tabindex=\"2\" /></td>";
	    txt += "<td width=\"100\"><input type=\"button\" name=\"Skip\" value=\"Skip\" onclick=\"sendnext()\" tabindex=\"3\" /></td>";
		if (data[STATE]=="Inuse") {
			txt += "<td width=\"100\"><input type=\"button\" name=\"DNS\" value=\"DNS\" onclick=\"senddns()\" tabindex=\"4\" /></td>";
			txt += "<td width=\"100\"><input type=\"button\" name=\"Retired\" value=\"Retired\" onclick=\"sendretired()\" tabindex=\"5\" /></td>";
		}
		else
			txt += "<td width=\"100\"><input type=\"button\" name=\"Restore\" value=\"Restore\" onclick=\"restore()\" tabindex=\"4\" /></td>";
	    txt += "<td width=\"100\"><input type=\"submit\" value=\"Cancel\" formaction=\"/index\" tabindex=\"6\" /></td>";
	    txt += "</table></form>";

		if (data[STATE]!="Inuse")
			txt += "<h1>" + data[STATE] + "</h1>";
		else {
			txt += "<p>Press the digit keys to enter the 12 arrows, 0 or m for miss,<br />";
			txt += "t or + for 10, x or * for an X, Backspace deletes the last digit entered.<br />";
			txt += "After 12 arrows, check the running total is correct.<br />";
			txt += "If all is OK, press enter or the space bar to enter the scores into the database.<br />";
			txt += "If there is an error, check the arrows are entered correctly.<br />";
			txt += "If the arrows are correct, mark the running slip and press enter.<br />"
				+ "Then check the running slip with the scoresheet.<br />";
			txt += "If the arrows are wrong use backspace and enter the correct arrows.<br />";
		}
	    document.getElementById("page").innerHTML = txt;
	}
	page();

	document.onkeydown = function (event) {
	    var keycode;
	    if (event.charCode)
		keycode = event.charCode;
	    else
		keycode = event.keyCode;
		if (data[STATE]!="Inuse") {
			if (keycode == 13 || keycode == 32) { // enter or space
				document.getElementById("send").value = "next";
				document.getElementById("data").submit();
			}
			return;
		}
	    if (scoring == Worcester) {
			if (keycode >= 48 && keycode <= 53) // 0 to 5
				data[ARROWS] += String.fromCharCode(keycode - 48 + 65);
			else if (keycode >= 96 && keycode <= 101) // numpad 0 to 5
				data[ARROWS] += String.fromCharCode(keycode - 96 + 65);
		}
	    else if (scoring != Imperial) {
			if (keycode >= 48 && keycode <= 57) // 0 to 9
				data[ARROWS] += String.fromCharCode(keycode - 48 + 65);
			else if (keycode >= 96 && keycode <= 105) // numpad 0 to 9
				data[ARROWS] += String.fromCharCode(keycode - 96 + 65);
		    else if (keycode == 84 || keycode == 107) // numpad +, t
				data[ARROWS] += String.fromCharCode(10 + 65);
			else if (keycode == 88 || keycode == 106) // numpad *, x
				data[ARROWS] += String.fromCharCode(11 + 65);
		}
	    else if (scoring == Imperial) {
			if (keycode == 48 || keycode == 49 || keycode == 51
			  || keycode == 53 || keycode == 55 || keycode == 57) // 0, 1, 3, 5, 7, 9
				data[ARROWS] += String.fromCharCode(keycode - 48 + 65);
			else if (keycode == 96 || keycode == 97 || keycode == 99
			  || keycode == 101 || keycode == 103 || keycode == 105) // 0, 1, 3, 5, 7, 9
				data[ARROWS] += String.fromCharCode(keycode - 96 + 65);
		}
	    if (keycode == 77 || keycode == 109) // M
			data[ARROWS] += String.fromCharCode(65);
	    else if (keycode == 8) { // backspace
			event.preventDefault();
			if (data[ARROWS].length > 0)
				data[ARROWS] = data[ARROWS].substring(0, data[ARROWS].length - 1);
	    }
	    else if (keycode == 13 || keycode == 32) { // enter or space
			checksend();
			return;
	    }
	    page();
	};

	function sendback() {
	    document.getElementById("send").value = "back";
	    document.getElementById("data").submit();
	}
	function sendnext() {
	    document.getElementById("send").value = "next";
	    document.getElementById("data").submit();
	}
	function senddns() {
	    document.getElementById("state").value = "DNS";
	    document.getElementById("arrowsend").value = data[ARROWS];
	    document.getElementById("send").value = "data";
	    document.getElementById("data").submit();
	}
	function sendretired() {
	    document.getElementById("state").value = "Retired";
	    document.getElementById("arrowsend").value = data[ARROWS];
	    document.getElementById("send").value = "data";
	    document.getElementById("data").submit();
	}
	function checksend() {
	    if (data[ARROWS].length % arrowsperend != 0) {
		document.getElementById("msg").value = "Wrong number of arrows.";
		document.getElementById("msg").style.background = "pink";
	    }
	    else {
		document.getElementById("arrowsend").value = data[ARROWS];
		document.getElementById("send").value = "data";
		document.getElementById("data").submit();
	    }
	}

	function restore() {
		data[STATE]="Inuse";
		page();
	}

    </script>
</body>
</html>
